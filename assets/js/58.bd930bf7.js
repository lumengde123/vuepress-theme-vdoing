(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{422:function(s,t,a){"use strict";a.r(t);var e=a(7),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"报错-error-remote-origin-already-exists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#报错-error-remote-origin-already-exists"}},[s._v("#")]),s._v(" 报错：error: remote origin already exists.")]),s._v(" "),t("p",[s._v("先删除远程 Git 仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" origin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("再添加远程 Git 仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@github.com:your-github-name/your-repository.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h1",{attrs:{id:"git-版本控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-版本控制"}},[s._v("#")]),s._v(" Git 版本控制")]),s._v(" "),t("p",[s._v("概念：一个免费开源、分布式的代码版本控制系统，帮助开发团队维护代码")]),s._v(" "),t("p",[s._v("作用：记录代码内容，切换代码版本，多人开发时高效合并代码内容")]),s._v(" "),t("p",[s._v("安装：百度。装好后在vscode中可以使用，"),t("code",[s._v("git -v")]),s._v(" 查看版本")]),s._v(" "),t("h2",{attrs:{id:"git-配置用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-配置用户信息"}},[s._v("#")]),s._v(" Git 配置用户信息")]),s._v(" "),t("p",[s._v("配置用户名和邮箱，应用在每次提交代码版本时表明自己身份")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-username"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youremail@xxx.com"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--list")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"git-本地仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-本地仓库"}},[s._v("#")]),s._v(" Git 本地仓库")]),s._v(" "),t("p",[s._v("Git仓库（repository）：记录文件状态内容的地方，存储着修改的历史记录。是一个"),t("code",[s._v(".git")]),s._v("的隐藏文件夹")]),s._v(" "),t("p",[s._v("创建：")]),s._v(" "),t("ul",[t("li",[s._v("把本地文件夹转换成Git仓库："),t("code",[s._v("git init")])]),s._v(" "),t("li",[s._v("从其他服务器上克隆Git仓库："),t("code",[s._v("git clone xxx")])])]),s._v(" "),t("blockquote",[t("p",[s._v("创建仓库后，打开文件资源管理器->查看->隐藏的项目，然后就可以在项目根目录下看到.git文件夹了")])]),s._v(" "),t("h2",{attrs:{id:"git的三个区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git的三个区域"}},[s._v("#")]),s._v(" Git的三个区域")]),s._v(" "),t("p",[s._v("工作区：实际开发时操作的文件夹")]),s._v(" "),t("p",[s._v("暂存区：保存之前的准备区域（暂存改动过的文件）")]),s._v(" "),t("p",[s._v("版本库：提交并保存暂存区中的内容，产生一个版本快照")]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git add 文件名\t\t- 暂存指定文件\ngit add .\t\t  - 暂存所有改动过的文件\ngit commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"注释说明"')]),s._v("\t- 提交并保存，产生版本快照\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("查看暂存区记录的文件："),t("code",[s._v("git ls-files")])]),s._v(" "),t("h2",{attrs:{id:"git-文件状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-文件状态"}},[s._v("#")]),s._v(" Git 文件状态")]),s._v(" "),t("p",[s._v("Git 文件 2种状态：")]),s._v(" "),t("ul",[t("li",[s._v("未跟踪：新文件，从未被Git管理过")]),s._v(" "),t("li",[s._v("已跟踪：Git 已经知道和管理的文件")])]),s._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[s._v("文件状态\t\t概念\t\t\t   场景\n未跟踪(U)\t从未被 Git 管理过\t\t新文件\n新添加(A)\t第一次被 Git 暂存\t\t之前版本记录无此文件\n未修改('')\t三个区域统一\t\t\t提交保存后\n已修改(M)\t工作区内容变化\t\t   修改了内容产生\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("查看改动过的文件状态："),t("code",[s._v("git status -s")])]),s._v(" "),t("h2",{attrs:{id:"git-暂存区使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-暂存区使用"}},[s._v("#")]),s._v(" Git 暂存区使用")]),s._v(" "),t("p",[s._v("暂存区：暂时存储，可以临时恢复代码内容，与版本库解耦")]),s._v(" "),t("p",[s._v("从暂存区"),t("strong",[s._v("恢复文件")]),s._v("到工作区："),t("code",[s._v("git restore 目标文件")]),s._v(" （注意：会被完全覆盖）")]),s._v(" "),t("p",[s._v("从暂存区"),t("strong",[s._v("移除文件")]),s._v("："),t("code",[s._v("git rm --cached 目标文件")])]),s._v(" "),t("h2",{attrs:{id:"回退版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回退版本"}},[s._v("#")]),s._v(" 回退版本")]),s._v(" "),t("p",[s._v("把"),t("strong",[s._v("版本库")]),s._v("某个版本对应的内容快照，恢复到工作区/暂存区")]),s._v(" "),t("p",[s._v("查看 git 提交历史（当前分支）："),t("code",[s._v("git log --oneline")])]),s._v(" "),t("p",[s._v("查看所有记录（包括分支、重置、回退、丢弃等）："),t("code",[s._v("git relog --oneline")])]),s._v(" "),t("p",[s._v("Git 回退命令")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("git reset --soft <版本号>")]),s._v("\n版本库回退到指定版本，保留工作区和暂存区原本内容")]),s._v(" "),t("li",[t("code",[s._v("git reset --hard <版本号>")]),s._v("\n彻底回退到指定版本，丢弃工作区和暂存区的所有内容，会重置到指定的提交状态。如果有新的提交就无法恢复！")]),s._v(" "),t("li",[t("code",[s._v("git reset --mixed <版本号>")]),s._v("\n回退到指定版本，保留工作区的改动，丢弃暂存区的改动。默认方式，它与 "),t("code",[s._v("git reset")]),s._v(" 没有参数时的效果是一样的。")])]),s._v(" "),t("h2",{attrs:{id:"删除文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[s._v("#")]),s._v(" 删除文件")]),s._v(" "),t("p",[s._v("例如，要删除"),t("code",[s._v("editor.js")]),s._v("文件并产生一次版本记录")]),s._v(" "),t("p",[s._v("步骤：")]),s._v(" "),t("ul",[t("li",[s._v("先手动删除工作区中的 "),t("code",[s._v("editor.js")])]),s._v(" "),t("li",[s._v("更新暂存区"),t("code",[s._v("git add .")]),s._v(" 或者 指定从暂存区移除 "),t("code",[s._v("git rm --cached editor.js")])]),s._v(" "),t("li",[s._v("提交保存")])]),s._v(" "),t("h2",{attrs:{id:"忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[s._v("#")]),s._v(" 忽略文件")]),s._v(" "),t("p",[t("code",[s._v(".gitignore")]),s._v(" 文件可以让 git 彻底忽略跟踪指定文件")]),s._v(" "),t("p",[s._v("目的：让 git 仓库更小更快，避免重复无意义的文件管理。")]),s._v(" "),t("p",[s._v("例如：软件或者系统自动生成的文件 node_modules 等、运行时生成的日志文件 缓存文件 临时文件等、涉密文件")]),s._v(" "),t("p",[s._v("创建：")]),s._v(" "),t("ul",[t("li",[s._v("项目根目录新建 "),t("code",[s._v(".gitignore")]),s._v(" 文件")]),s._v(" "),t("li",[s._v("填入相应配置来忽略指定文件")])]),s._v(" "),t("p",[s._v("如果要忽略的文件已经被暂存区跟踪过，把它从暂存区移除即可")]),s._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[s._v("// .gitignore 举例\nnode_modules\ndist\n.vscode\n"),t("span",{pre:!0,attrs:{class:"token italic"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token content"}},[s._v(".pem\n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("*")])]),s._v(".cer\n*.log\npassword.txt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"分支操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[s._v("#")]),s._v(" 分支操作")]),s._v(" "),t("p",[t("strong",[s._v("基本概念")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("HEAD")]),s._v("：指针，指向当前所在的提交版本（一般指向当前分支的最新提交）。")]),s._v(" "),t("li",[t("strong",[s._v("master（旧称）/main（新称）")]),s._v("：默认的主分支，用于存放稳定的发布版本。")]),s._v(" "),t("li",[t("strong",[s._v("分支（Branch）")]),s._v("：从主分支或其他分支分出来的代码路径，用于隔离不同功能或修复任务。\n"),t("ul",[t("li",[s._v("例如："),t("strong",[s._v("功能分支 ("),t("code",[s._v("feature/xxx")]),s._v(")")]),s._v("：用于新功能开发。"),t("strong",[s._v("修复分支 ("),t("code",[s._v("hotfix/xxx")]),s._v(")")]),s._v("：用于紧急修复Bug。")])])])]),s._v(" "),t("p",[t("strong",[s._v("常用命令")])]),s._v(" "),t("p",[s._v("查看分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远程分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有分支（本地 + 远程）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch feature-login\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建分支")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("创建并切换到新分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" feature-login\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" feature-login  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建并切换到新分支")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("切换分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 旧指令")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("删除分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" feature-login      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除已合并分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" feature-login      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制删除未合并分支")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("推送分支到远程")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin feature-login\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("拉取远程分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("合并分支 feature-login->main")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature-login\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("查看分支图")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--oneline")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--graph")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--decorate")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--all")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("简单的分支流程：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 创建并切换到新分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" feature-auth\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 修改代码并提交")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"完成登录功能"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 推送到远程仓库")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin feature-auth\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. 切回主分支并合并（当分支代码测试无问题后）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature-auth\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5. 删除本地分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" feature-auth\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("分支合并到主线时，主线已经有了新的提交记录，这时候Git 会自动比对两个分支的共同基础提交点和最新改动，通过三路合并生成新的合并提交记录。但是一般合并时会发生冲突，需要手动处理")])]),s._v(" "),t("li",[t("p",[s._v("不同分支中，对同一个文件的同一部分进行了修改，Git 无法干净的合并，产生合并冲突。需要打开 VsCode "),t("strong",[s._v("手动解决冲突")]),s._v("，合并后再进行提交")])])]),s._v(" "),t("h2",{attrs:{id:"git-远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-远程仓库"}},[s._v("#")]),s._v(" Git 远程仓库")]),s._v(" "),t("p",[s._v("托管在网络上的某个项目的版本库，保存版本库的历史记录，用于多人协作")]),s._v(" "),t("p",[t("strong",[s._v("推送到远程步骤：")])]),s._v(" "),t("ul",[t("li",[s._v("注册第三方托管平台网站账号")]),s._v(" "),t("li",[s._v("新建仓库得到"),t("strong",[s._v("远程仓库 Git 地址")])]),s._v(" "),t("li",[s._v("本地 Git 仓库"),t("strong",[s._v("添加")]),s._v("远程仓库原点地址\n"),t("ul",[t("li",[t("code",[s._v("git remote add 远程仓库别名 远程仓库地址")])]),s._v(" "),t("li",[s._v("例如："),t("code",[s._v("git remote add origin xxx.git")])])])]),s._v(" "),t("li",[s._v("查看一下："),t("code",[s._v("git remote -v")])]),s._v(" "),t("li",[s._v("如果想更改远程仓库，需要先移除："),t("code",[s._v("git remote remove origin")]),s._v("，然后重新添加即可")]),s._v(" "),t("li",[s._v("本地 Git 仓库"),t("strong",[s._v("推送")]),s._v("版本记录到远程记录\n"),t("ul",[t("li",[t("code",[s._v("git push -u 远程仓库别名 本地和远程分支名")])]),s._v(" "),t("li",[s._v("例如："),t("code",[s._v("git push -u origin master")])]),s._v(" "),t("li",[s._v("完整写法："),t("code",[s._v("git push --set-upstream origin master:master")])])])])]),s._v(" "),t("p",[t("strong",[s._v("克隆到本地步骤：")])]),s._v(" "),t("ul",[t("li",[s._v("执行指令："),t("code",[s._v("git clone 远程仓库地址")]),s._v("，就会在运行命令的文件夹生成 "),t("code",[s._v("仓库名")]),s._v("文件夹（包含版本库，并映射到暂存区和工作区）")]),s._v(" "),t("li",[s._v("并且此时生成的 Git 本地仓库已经建立好和远程仓库的链接，但是要加入仓库成员才能推送。 或者修改推送远程仓库为自己的仓库")])]),s._v(" "),t("p",[t("strong",[s._v("拉取到本地步骤：")])]),s._v(" "),t("ul",[t("li",[s._v("如果本地已有仓库，需要从远程仓库获取最新的更改内容，需要拉取到本地："),t("code",[s._v("git pull origin master")])]),s._v(" "),t("li",[s._v("等价于 获取+合并："),t("code",[s._v("git fetch origin master:master")]),s._v(" + "),t("code",[s._v("git merge origin/master")])])]),s._v(" "),t("p",[s._v("补充：拉取合并 指令 "),t("code",[s._v("git pull -rebase 远程仓库别名 分支名")])]),s._v(" "),t("h2",{attrs:{id:"vscode-中使用-git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-中使用-git"}},[s._v("#")]),s._v(" VSCode 中使用 Git")]),s._v(" "),t("p",[s._v("在VSCode左侧第三个图标中，可以使用源代码管理，可视化的对项目进行暂存、撤销、对比差异、提交等操作")])])}),[],!1,null,null,null);t.default=n.exports}}]);